# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: http://www.jhipster.tech/profiles/
# More information on configuration properties: http://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
    level:
        ROOT: DEBUG
        com.redhat.gps.pathfinder: DEBUG
        io.github.jhipster: WARN
        org.springframework: INFO
        org.springframework.security: DEBUG

spring:
    profiles:
        active: dev
        include: swagger
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    data:
        mongodb:
#            uri: mongodb:///pathfinder?authSource=pathfinder
            database: pathfinder
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-seconds: 1
    thymeleaf:
        cache: false

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias pathfinder -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 8443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        key-store-type: PKCS12
#        key-alias: pathfinder
# ===================================================================
server:
    port: 8080

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: http://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
    cors:
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
        exposed-headers: "Link,X-Total-Count"
        allow-credentials: true
        max-age: 1800
    security:
        remember-me:
            # security key (this key should be unique for your application, and kept secret)
            key: 7a7a6807176c6b84f48facc54b1ce34821456b40
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: pathfinder@localhost
        base-url: http://127.0.0.1:8080
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: pathfinder
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: false
            endpoint: /metrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512


# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# http://www.jhipster.tech/common-application-properties/
# ===================================================================

#Used when not running in ose/k8s environment
#database-user: dbuser
#database-password: dbuser12345
#database-user: userS1K
#database-password: JBf2ibxFbqYAmAv0

# vft-dashboard
#database-user: userK47
#database-password: hhVJurwHQQJdEUco
#dbhostport: 9191

#pathfinder-dev
#database-user: userU11
#database-password: maaGjyFEpITyQYB3
#dbhostport: 9191

#pathfinder-local
database-user:
database-password:
dbhostport: 27017


database-name: pathfinder
database-admin-password: 12345
dbhostname: localhost

keycloak.enabled: false
keycloak.configurationFile: classpath:keycloak.json
#keycloak.realm: pathfinder
#keycloak.auth-server-url: http://sso-pathfinder.192.168.99.100.nip.io/auth
#keycloak.ssl-required: external
#keycloak.resource: pathfinderclient
#
#keycloak.securityConstraints[1].authRoles[0] : pathfinderAdmin
#keycloak.securityConstraints[1].securityCollections[0].name : admin stuff
#keycloak.securityConstraints[1].securityCollections[0].patterns[0] : /api/pathfinder/customers/
#
#
#keycloak.securityConstraints[0].authRoles[0]: pathfinderAdmin
#keycloak.securityConstraints[0].authRoles[1]: pathfinderUser
#keycloak.securityConstraints[0].securityCollections[0].name : insecure stuff
#keycloak.securityConstraints[0].securityCollections[0].patterns[0] : /api/
#
#
#keycloak.use-resource-role-mappings : true




application:
